{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","c","message","empty","hack","image","src","avatar","alt","name","content","text","time","messageData","HW1","Affair","s","item","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","cnAll","button","filter","active","cnHigh","cnMiddle","cnLow","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorInput","input","greeting","value","onChange","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","e","newName","currentTarget","trim","alert","HW3","setUsers","user","id","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1d77cf00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3uORV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2rFty\",\"image\":\"Message_image__1OUID\",\"content\":\"Message_content__2r_iD\",\"name\":\"Message_name__FkE90\",\"text\":\"Message_text__3km1C\",\"time\":\"Message_time__1eU3q\",\"hack\":\"Message_hack__2GTg_\",\"empty\":\"Message_empty__1b_Ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1825j\",\"error\":\"Greeting_error__2idHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__pKWt_\",\"superInput\":\"SuperInputText_superInput__3o_So\",\"errorInput\":\"SuperInputText_errorInput__3FhKK\",\"error\":\"SuperInputText_error__vwuuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2FFAX\",\"column\":\"HW4_column__2leaz\",\"testSpanError\":\"HW4_testSpanError__11Cos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2w9Lq\",\"red\":\"SuperButton_red__6QjsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Ftxq\",\"spanClassName\":\"SuperCheckbox_spanClassName__3J6a5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3fHUE\"};","import React from 'react'\nimport c from './Message.module.css'\n\ntype MessageDataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction Message(props: MessageDataType) {\n    return (\n        <>\n            <div className={c.message}>\n                <div className={c.empty}>\n                    <div className={c.hack}><img className={c.image} src={props.avatar} alt={props.name}/></div>\n                </div>\n\n                <div className={c.content}>\n                    <div className={c.name}>{props.name}</div>\n\n                    <div className={c.text}>{props.message}</div>\n                    <div className={c.time}>{props.time}</div>\n                </div>\n\n            </div>\n\n\n        </>\n    )\n}\n\nexport default Message;\n","import React from 'react'\nimport Message from \"./Message\";\nimport './Message.module.css'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'npm start нажимал?',\n    time: '20:00',\n}\n\nfunction HW1() {\n    return (\n        <>\n            <hr/>\n            homeworks 1\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n\n            />\n            <hr/>\n\n        </>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2';\nimport s from './Affairs.module.css'\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n    const priorityClass =s.item +' '+s[props.affair.priority]\n\n    return (\n        <div>\n            <div>{props.affair.name}</div>\n            <div>{props.affair.priority}</div>\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n    filter :FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n\n    const set = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        props.setFilter(e.currentTarget.value as FilterType)\n\n    }\n    const cnAll =s.button+' '+(props.filter==='all'? s.active: '')\n    const cnHigh =s.button+' '+(props.filter==='high'? s.active: '')\n    const cnMiddle =s.button+' '+(props.filter==='middle'? s.active: '')\n    const cnLow =s.button+' '+(props.filter==='low'? s.active: '')\n    const serClass =(filter:FilterType) => {\n        return s.button +(props.filter === filter ? ' '+ s.active: '')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={cnAll}>All</button>\n            <button onClick={setHigh} className={cnHigh}>High</button>\n            <button onClick={setMiddle} className={cnMiddle}>Middle</button>\n            <button onClick={setLow}className={cnLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\n\n\n\n\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: AffairPriorityType\n} // need to fix any\n\n\n\nexport type FilterType = 'all' | AffairPriorityType\n\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return  affairs.filter(a => a.priority === filter) // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id)  // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any+\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any+\n    addUser:() => void   // need to fix any+\n    error: string // need to fix any+\n    totalUsers: number  // need to fix any+\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = s.error ? s.errorInput : s.input // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n            />\n\n            <span className={s.error}>{error}</span>\n            <button onClick={addUser} disabled={!name}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any+\n    addUserCallback: (name: string) => void // need to fix any+\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n\n\n\n    const [name, setName] = useState<string>('') // need to fix any+\n    const [error, setError] = useState<string>('') // need to fix any+\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let newName = e.currentTarget.value.trim()\n        if (newName){\n            setName(newName)\n           error && setError('')\n        }else{\n          name &&  setName('')\n            setError('!!!')\n        }// need to fix any+\n        // need to fix+\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`) // need to fix+\n    }\n\n    const totalUsers = users.length // need to fix+\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\n\n\n\n// types\nexport type UserType = {\n    _id: string // need to fix any+\n    name: string // need to fix any+\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any+\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            id: v1(),\n            name: name,\n        }// need to fix any+\n        // @ts-ignore\n        setUsers([...users, user]) // need to fix+\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}